// Code generated by go-swagger; DO NOT EDIT.

// /*
//  * Copyright (c) 2023 Baidu, Inc. All Rights Reserved.
//  *
//  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
//  * except in compliance with the License. You may obtain a copy of the License at
//  *
//  * http://www.apache.org/licenses/LICENSE-2.0
//  *
//  * Unless required by applicable law or agreed to in writing, software distributed under the
//  * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
//  * either express or implied. See the License for the specific language governing permissions
//  * and limitations under the License.
//  *
//  */

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EndpointProbeResponse EndpointProbeResponse is the response of probe endpoint
//
// swagger:model EndpointProbeResponse
type EndpointProbeResponse struct {

	// band width
	BandWidth *BandwidthOption `json:"bandWidth,omitempty"`

	// feature gates
	FeatureGates []ExtFeatureData `json:"featureGates,omitempty"`
}

// Validate validates this endpoint probe response
func (m *EndpointProbeResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBandWidth(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFeatureGates(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EndpointProbeResponse) validateBandWidth(formats strfmt.Registry) error {

	if swag.IsZero(m.BandWidth) { // not required
		return nil
	}

	if m.BandWidth != nil {
		if err := m.BandWidth.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("bandWidth")
			}
			return err
		}
	}

	return nil
}

func (m *EndpointProbeResponse) validateFeatureGates(formats strfmt.Registry) error {

	if swag.IsZero(m.FeatureGates) { // not required
		return nil
	}

	for i := 0; i < len(m.FeatureGates); i++ {

		if err := m.FeatureGates[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("featureGates" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *EndpointProbeResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EndpointProbeResponse) UnmarshalBinary(b []byte) error {
	var res EndpointProbeResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
