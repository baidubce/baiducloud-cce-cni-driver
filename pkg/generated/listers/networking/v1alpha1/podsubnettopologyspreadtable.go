// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/baidubce/baiducloud-cce-cni-driver/pkg/apis/networking/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PodSubnetTopologySpreadTableLister helps list PodSubnetTopologySpreadTables.
type PodSubnetTopologySpreadTableLister interface {
	// List lists all PodSubnetTopologySpreadTables in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PodSubnetTopologySpreadTable, err error)
	// PodSubnetTopologySpreadTables returns an object that can list and get PodSubnetTopologySpreadTables.
	PodSubnetTopologySpreadTables(namespace string) PodSubnetTopologySpreadTableNamespaceLister
	PodSubnetTopologySpreadTableListerExpansion
}

// podSubnetTopologySpreadTableLister implements the PodSubnetTopologySpreadTableLister interface.
type podSubnetTopologySpreadTableLister struct {
	indexer cache.Indexer
}

// NewPodSubnetTopologySpreadTableLister returns a new PodSubnetTopologySpreadTableLister.
func NewPodSubnetTopologySpreadTableLister(indexer cache.Indexer) PodSubnetTopologySpreadTableLister {
	return &podSubnetTopologySpreadTableLister{indexer: indexer}
}

// List lists all PodSubnetTopologySpreadTables in the indexer.
func (s *podSubnetTopologySpreadTableLister) List(selector labels.Selector) (ret []*v1alpha1.PodSubnetTopologySpreadTable, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PodSubnetTopologySpreadTable))
	})
	return ret, err
}

// PodSubnetTopologySpreadTables returns an object that can list and get PodSubnetTopologySpreadTables.
func (s *podSubnetTopologySpreadTableLister) PodSubnetTopologySpreadTables(namespace string) PodSubnetTopologySpreadTableNamespaceLister {
	return podSubnetTopologySpreadTableNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PodSubnetTopologySpreadTableNamespaceLister helps list and get PodSubnetTopologySpreadTables.
type PodSubnetTopologySpreadTableNamespaceLister interface {
	// List lists all PodSubnetTopologySpreadTables in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PodSubnetTopologySpreadTable, err error)
	// Get retrieves the PodSubnetTopologySpreadTable from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PodSubnetTopologySpreadTable, error)
	PodSubnetTopologySpreadTableNamespaceListerExpansion
}

// podSubnetTopologySpreadTableNamespaceLister implements the PodSubnetTopologySpreadTableNamespaceLister
// interface.
type podSubnetTopologySpreadTableNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PodSubnetTopologySpreadTables in the indexer for a given namespace.
func (s podSubnetTopologySpreadTableNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PodSubnetTopologySpreadTable, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PodSubnetTopologySpreadTable))
	})
	return ret, err
}

// Get retrieves the PodSubnetTopologySpreadTable from the indexer for a given namespace and name.
func (s podSubnetTopologySpreadTableNamespaceLister) Get(name string) (*v1alpha1.PodSubnetTopologySpreadTable, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("podsubnettopologyspreadtable"), name)
	}
	return obj.(*v1alpha1.PodSubnetTopologySpreadTable), nil
}
