// Code generated by go-swagger; DO NOT EDIT.

// /*
//  * Copyright (c) 2023 Baidu, Inc. All Rights Reserved.
//  *
//  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
//  * except in compliance with the License. You may obtain a copy of the License at
//  *
//  * http://www.apache.org/licenses/LICENSE-2.0
//  *
//  * Unless required by applicable law or agreed to in writing, software distributed under the
//  * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
//  * either express or implied. See the License for the specific language governing permissions
//  * and limitations under the License.
//  *
//  */

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EndpointIdentifiers Unique identifiers for this endpoint from outside CCE
//
// +deepequal-gen=true
//
// swagger:model EndpointIdentifiers
type EndpointIdentifiers struct {

	// ID assigned by container runtime
	ContainerID string `json:"container-id,omitempty"`

	// Name assigned to container
	ContainerName string `json:"container-name,omitempty"`

	// External network ID, such as the ID of the ENI occupied by the container
	ExternalIdentifier string `json:"external-identifier,omitempty"`

	// K8s namespace for this endpoint
	K8sNamespace string `json:"k8s-namespace,omitempty"`

	// K8s object id to indentifier a unique object
	K8sObjectID string `json:"k8s-object-id,omitempty"`

	// K8s pod name for this endpoint
	K8sPodName string `json:"k8s-pod-name,omitempty"`

	// netns use by CNI
	Netns string `json:"netns,omitempty"`

	// K8s pod for this endpoint(Deprecated, use K8sPodName and K8sNamespace instead)
	PodName string `json:"pod-name,omitempty"`
}

// Validate validates this endpoint identifiers
func (m *EndpointIdentifiers) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *EndpointIdentifiers) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EndpointIdentifiers) UnmarshalBinary(b []byte) error {
	var res EndpointIdentifiers
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
