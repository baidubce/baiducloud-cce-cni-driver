// Code generated by go-swagger; DO NOT EDIT.

// /*
//  * Copyright (c) 2023 Baidu, Inc. All Rights Reserved.
//  *
//  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
//  * except in compliance with the License. You may obtain a copy of the License at
//  *
//  * http://www.apache.org/licenses/LICENSE-2.0
//  *
//  * Unless required by applicable law or agreed to in writing, software distributed under the
//  * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
//  * either express or implied. See the License for the specific language governing permissions
//  * and limitations under the License.
//  *
//  */

package eni

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/baidubce/baiducloud-cce-cni-driver/cce-network-v2/api/v1/models"
)

// PostEniOKCode is the HTTP code returned for type PostEniOK
const PostEniOKCode int = 200

/*
PostEniOK Success

swagger:response postEniOK
*/
type PostEniOK struct {

	/*
	  In: Body
	*/
	Payload *models.IPAMResponse `json:"body,omitempty"`
}

// NewPostEniOK creates PostEniOK with default headers values
func NewPostEniOK() *PostEniOK {

	return &PostEniOK{}
}

// WithPayload adds the payload to the post eni o k response
func (o *PostEniOK) WithPayload(payload *models.IPAMResponse) *PostEniOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post eni o k response
func (o *PostEniOK) SetPayload(payload *models.IPAMResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEniOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostEniInvalidCode is the HTTP code returned for type PostEniInvalid
const PostEniInvalidCode int = 400

/*
PostEniInvalid Invalid IP address

swagger:response postEniInvalid
*/
type PostEniInvalid struct {
}

// NewPostEniInvalid creates PostEniInvalid with default headers values
func NewPostEniInvalid() *PostEniInvalid {

	return &PostEniInvalid{}
}

// WriteResponse to the client
func (o *PostEniInvalid) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// PostEniExistsCode is the HTTP code returned for type PostEniExists
const PostEniExistsCode int = 409

/*
PostEniExists IP already allocated

swagger:response postEniExists
*/
type PostEniExists struct {
}

// NewPostEniExists creates PostEniExists with default headers values
func NewPostEniExists() *PostEniExists {

	return &PostEniExists{}
}

// WriteResponse to the client
func (o *PostEniExists) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}

// PostEniFailureCode is the HTTP code returned for type PostEniFailure
const PostEniFailureCode int = 500

/*
PostEniFailure IP allocation failure. Details in message.

swagger:response postEniFailure
*/
type PostEniFailure struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPostEniFailure creates PostEniFailure with default headers values
func NewPostEniFailure() *PostEniFailure {

	return &PostEniFailure{}
}

// WithPayload adds the payload to the post eni failure response
func (o *PostEniFailure) WithPayload(payload models.Error) *PostEniFailure {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post eni failure response
func (o *PostEniFailure) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostEniFailure) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostEniDisabledCode is the HTTP code returned for type PostEniDisabled
const PostEniDisabledCode int = 501

/*
PostEniDisabled Allocation for address family disabled

swagger:response postEniDisabled
*/
type PostEniDisabled struct {
}

// NewPostEniDisabled creates PostEniDisabled with default headers values
func NewPostEniDisabled() *PostEniDisabled {

	return &PostEniDisabled{}
}

// WriteResponse to the client
func (o *PostEniDisabled) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(501)
}
