/*
 * Copyright (c) 2023 Baidu, Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 *
 */

// Code generated by informer-gen. DO NOT EDIT.

package v2

import (
	internalinterfaces "github.com/baidubce/baiducloud-cce-cni-driver/cce-network-v2/pkg/k8s/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// CCEEndpoints returns a CCEEndpointInformer.
	CCEEndpoints() CCEEndpointInformer
	// NetResourceSets returns a NetResourceSetInformer.
	NetResourceSets() NetResourceSetInformer
	// ENIs returns a ENIInformer.
	ENIs() ENIInformer
	// PodSubnetTopologySpreads returns a PodSubnetTopologySpreadInformer.
	PodSubnetTopologySpreads() PodSubnetTopologySpreadInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// CCEEndpoints returns a CCEEndpointInformer.
func (v *version) CCEEndpoints() CCEEndpointInformer {
	return &cCEEndpointInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// NetResourceSets returns a NetResourceSetInformer.
func (v *version) NetResourceSets() NetResourceSetInformer {
	return &netResourceSetInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// ENIs returns a ENIInformer.
func (v *version) ENIs() ENIInformer {
	return &eNIInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// PodSubnetTopologySpreads returns a PodSubnetTopologySpreadInformer.
func (v *version) PodSubnetTopologySpreads() PodSubnetTopologySpreadInformer {
	return &podSubnetTopologySpreadInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
