// Code generated by MockGen. DO NOT EDIT.
// Source: types.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	client "github.com/baidubce/baiducloud-cce-cni-driver/pkg/eniipam/ipam/rdma/client"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIaaSClient is a mock of IaaSClient interface
type MockIaaSClient struct {
	ctrl     *gomock.Controller
	recorder *MockIaaSClientMockRecorder
}

// MockIaaSClientMockRecorder is the mock recorder for MockIaaSClient
type MockIaaSClientMockRecorder struct {
	mock *MockIaaSClient
}

// NewMockIaaSClient creates a new mock instance
func NewMockIaaSClient(ctrl *gomock.Controller) *MockIaaSClient {
	mock := &MockIaaSClient{ctrl: ctrl}
	mock.recorder = &MockIaaSClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIaaSClient) EXPECT() *MockIaaSClientMockRecorder {
	return m.recorder
}

// ListEnis mocks base method
func (m *MockIaaSClient) ListEnis(ctx context.Context, vpcID, instanceID string) ([]client.EniResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListEnis", ctx, vpcID, instanceID)
	ret0, _ := ret[0].([]client.EniResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListEnis indicates an expected call of ListEnis
func (mr *MockIaaSClientMockRecorder) ListEnis(ctx, vpcID, instanceID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListEnis", reflect.TypeOf((*MockIaaSClient)(nil).ListEnis), ctx, vpcID, instanceID)
}

// AddPrivateIP mocks base method
func (m *MockIaaSClient) AddPrivateIP(ctx context.Context, eniID, privateIP string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddPrivateIP", ctx, eniID, privateIP)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddPrivateIP indicates an expected call of AddPrivateIP
func (mr *MockIaaSClientMockRecorder) AddPrivateIP(ctx, eniID, privateIP interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddPrivateIP", reflect.TypeOf((*MockIaaSClient)(nil).AddPrivateIP), ctx, eniID, privateIP)
}

// DeletePrivateIP mocks base method
func (m *MockIaaSClient) DeletePrivateIP(ctx context.Context, eniID, privateIP string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePrivateIP", ctx, eniID, privateIP)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeletePrivateIP indicates an expected call of DeletePrivateIP
func (mr *MockIaaSClientMockRecorder) DeletePrivateIP(ctx, eniID, privateIP interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePrivateIP", reflect.TypeOf((*MockIaaSClient)(nil).DeletePrivateIP), ctx, eniID, privateIP)
}

// GetMwepType mocks base method
func (m *MockIaaSClient) GetMwepType() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMwepType")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetMwepType indicates an expected call of GetMwepType
func (mr *MockIaaSClientMockRecorder) GetMwepType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMwepType", reflect.TypeOf((*MockIaaSClient)(nil).GetMwepType))
}

// GetInstanceType mocks base method
func (m *MockIaaSClient) GetInstanceType() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstanceType")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetInstanceType indicates an expected call of GetInstanceType
func (mr *MockIaaSClientMockRecorder) GetInstanceType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstanceType", reflect.TypeOf((*MockIaaSClient)(nil).GetInstanceType))
}
